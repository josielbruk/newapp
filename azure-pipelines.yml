trigger:
  - main

pool:
  vmImage: ubuntu-latest

steps:
  # authenticate with Azure using OIDC
  # - task: AzureCLI@2
  #   inputs:
  #     azureSubscription: "Azure Subs OIDC"
  #     scriptType: "bash"
  #     scriptLocation: "inlineScript"
  #     inlineScript: |
  #       export AZURE_CLIENT_ID=$(az account show --query user.name -o tsv)
  #       export AZURE_TENANT_ID=$(az account show --query tenantId -o tsv)
  #       export FEDERATED_TOKEN=$(curl -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" -H "Content-Type: application/json" -X POST -d '{"client_id":"'$AZURE_CLIENT_ID'","scope":"api://AzureADTokenExchange/.default","grant_type":"urn:ietf:params:oauth:grant-type:jwt-bearer","requested_token_use":"on_behalf_of","assertion":"'$SYSTEM_ACCESSTOKEN'"}' https://login.microsoftonline.com/$AZURE_TENANT_ID/oauth2/v2.0/token | jq -r .access_token)
  #       echo "##vso[task.setvariable variable=FEDERATED_TOKEN;issecret=true]$FEDERATED_TOKEN"
  #       echo $(System.AccessToken) | az devops login
  #   env:
  #     SYSTEM_ACCESSTOKEN: $(System.AccessToken)
  - task: AzureCLI@2
    displayName: Terraform credentials
    inputs:
      azureSubscription: "Azure Subs OIDC"
      scriptLocation: inlineScript
      scriptType: bash
      inlineScript: |
        set -eu  # fail on error
        az account set -s $(subscription_id)
        subscriptionId=$(az account show --query id -o tsv)
        echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
        echo "##vso[task.setvariable variable=ARM_USE_OIDC]true"
        echo "##vso[task.setvariable variable=ARM_OIDC_TOKEN]$idToken"
        echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
        echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
      addSpnToEnvironment: true

  - script: |
      az artifacts universal download \
      --organization "https://dev.azure.com/josielbruk/" \
      --feed "josielbruk" \
      --name "my-first-package" \
      --version "0.0.1" \
      --path $(System.ArtifactsDirectory)
    env:
      FEDERATED_TOKEN: $(FEDERATED_TOKEN)
    displayName: "Download the artifact"

  - script: |
      echo "Listing files"
      ls $(System.ArtifactsDirectory)
    displayName: "Listing the content of the folder: $(System.ArtifactsDirectory)"