name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  DOTNET_VERSION: "8.0.x" # set this to the .NET Core version to use
  TAG: ${{ github.run_number }}

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Find Projects
        run: |
          echo "projects<<EOF" >> $GITHUB_ENV
          find . -name '*.csproj' -o -name '*.sln' | sort -u >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Restore Dependencies
        run: |
          while IFS= read -r project; do
            echo "Restoring dependencies for $project ..."
            dotnet restore "$project"
          done <<< "$projects"

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: false

      - name: Build and Test Projects
        run: |
          for project in ${{ env.projects }}; do
            echo "Building $project ..."
            dotnet build "$project" --configuration Release --no-restore
            echo "Testing $project ..."
            dotnet test "$project" --no-restore --verbosity normal
          done

      - name: Publish Artifacts
        run: |
          for project in ${{ env.projects }}; do
            output_dir=$(dirname "$project")/publish
            echo "Publishing $project ..."
            dotnet publish "$project" -c Release -o "$output_dir"
            zip -r "${output_dir}.zip" "$output_dir"
          done

      - name: Authenticate with Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Upload Artifacts to Azure DevOps
        run: |
          for project in ${{ env.projects }}; do
            artifact_zip=$(dirname "$project")/publish.zip
            if [[ -f "$artifact_zip" ]]; then
              echo "Uploading $artifact_zip to Azure DevOps..."
              az artifacts universal publish \
                --organization https://dev.azure.com/josielbruk/ \
                --feed josielbruk \
                --name "$(basename "$project")" \
                --version "0.0.${{ github.run_number }}" \
                --description "Artifact for $project" \
                --path "$artifact_zip"
            else
              echo "No artifact found for $project."
            fi
          done
