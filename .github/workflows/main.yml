name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'                 # set this to the .NET Core version to use
  TAG: ${{ github.RUN_NUMBER }}

on:
  push:
    branches: [ "main" ]
    paths: 
      - 'app/**'
  pull_request:
    branches: [ "main" ]
    paths: 
      - 'app/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  # build:
  # runs-on: ubuntu-latest
  job:
    name: Build
    runs-on: ubuntu-latest
    steps:
  
    - uses: actions/checkout@v4

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ github.workspace }}/app/src/RazorPagesTestSample/RazorPagesTestSample.sln
      shell: /usr/bin/bash -e {0}
      # env:
      #   AZURE_WEBAPP_NAME: your-app-name
      #   AZURE_WEBAPP_PACKAGE_PATH: .
      #   DOTNET_VERSION: 6.0.x
      #   DOTNET_ROOT: /home/runner/.dotnet

    - name: Build with dotnet
      run: dotnet build ./app/src/RazorPagesTestSample/RazorPagesTestSample.csproj

    - name: dotnet test
      run: dotnet test ./app/src/RazorPagesTestSample/RazorPagesTestSample.csproj --configuration Release

    - name: Authenticate with Azure using OIDC
      id: azure-auth
      run: |
        export AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
        export AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
        export FEDERATED_TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" -H "Content-Type: application/json" -X POST -d '{"client_id":"${AZURE_CLIENT_ID}","scope":"api://AzureADTokenExchange/.default","grant_type":"urn:ietf:params:oauth:grant-type:jwt-bearer","requested_token_use":"on_behalf_of","assertion":"'$ACTIONS_ID_TOKEN_REQUEST_TOKEN'"}' https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/token | jq -r .access_token)
        echo "##vso[task.setvariable variable=FEDERATED_TOKEN;issecret=true]$FEDERATED_TOKEN"

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: false

    - name: Publish
      run: dotnet publish ./app/src/RazorPagesTestSample/RazorPagesTestSample.csproj -c Release --output ./publish/

    - name: Publish Artifact to Azure DevOps
      uses: azure/CLI@v1
      env:
        AZURE_DEVOPS_TOKEN: ${{ steps.azure-auth.outputs.FEDERATED_TOKEN }}
      with:
        inlineScript: |
          az artifacts universal publish \
          --organization https://dev.azure.com/josielbruk/ \
          --feed josielbruk \
          --name my-first-package \
          --version "0.0.${{ github.RUN_NUMBER }}" \
          --description "Welcome to Universal Packages" \
          --path "./publish/"
          --force true

    - name: Run Azure DevOps Pipeline
      uses: Azure/pipelines@v1
      with:
        azure-devops-token: ${{ steps.azure-auth.outputs.FEDERATED_TOKEN }}
        azure-devops-project-url: 'https://dev.azure.com/josielbruk/newapp'
        azure-pipeline-name: 'josielbruk.newapp' # name of the Azure pipeline to be triggered
        
