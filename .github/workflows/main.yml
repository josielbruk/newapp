name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  DOTNET_VERSION: "8.0.x" # set this to the .NET Core version to use
  TAG: ${{ github.run_number }}
  app_path: "application/CohortManager/src/Functions"
on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ${{ env.app_path }}

      - name: Build functions
        run: |
          cd ${{ env.app_path }}
          for functionDir in $(find . -name '*.csproj' -exec dirname {} \;); do
            functionName=$(basename $functionDir)
            echo "Building $functionName"
            dotnet build --configuration Release $functionDir            
          done

      - name: Test functions
        run: |
          cd ${{ env.app_path }}
          for functionDir in $(find . -name '*.csproj' -exec dirname {} \;); do
            functionName=$(basename $functionDir)
            echo "Testing $functionName"            
            dotnet test $functionDir
          done

      - name: Publish Artifacts
        run: |
          cd ${{ env.app_path }}
          mkdir -p ./artifacts/
          echo "ls folders"
          ls -la
          for functionDir in $(find . -name '*.csproj' -exec dirname {} \;); do
            functionName=$(basename $functionDir)
            dotnet publish --configuration Release --output ./output/$functionName $functionDir
            zip -r $functionName.zip ./output/$functionName
            echo "Path to zip file: $functionName.zip"
            pwd
            mv $functionName.zip ./artifacts/
          done

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: false

      - name: Upload Artifacts to Azure DevOps
        env:
          AZURE_DEVOPS_TOKEN: ${{ steps.azure-auth.outputs.FEDERATED_TOKEN }}
        run: |
          cd ${{ env.app_path }}/artifacts
          for zipFile in *.zip; do
            functionName=$(basename $zipFile .zip)
            echo "Uploading $zipFile to Azure Artifacts"
            az artifacts universal publish \
              --organization "https://dev.azure.com/josielbruk/" \
              --feed "josielbruk" \
              --name "$functionName" \
              --version "1.0.0" \
              --description "Zipped .NET codebase for $functionName" \
              --path .
            echo "****Uploaded $zipFile to Azure Artifacts***"
            ls -la
          done
